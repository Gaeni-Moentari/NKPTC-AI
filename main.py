import os
import streamlit as st
from dotenv import load_dotenv
from crewai import Crew, Agent, Task
from crewai_tools import WebsiteSearchTool
from langchain.chat_models import ChatOpenAI
from urlbase import url
load_dotenv()

openai_model = "gpt-3.5-turbo"
openai_api_key = os.getenv("OPENAI_API_KEY")

if not openai_api_key:
    st.error("‚ùå OPENAI_API_KEY is not set. Please check your .env file.")
elif not openai_model:
    st.error("‚ùå OPENAI_MODEL_NAME is not set. Please check your .env file.")
else:
    web_rag_tool = WebsiteSearchTool()
    
    llm = ChatOpenAI(
        model=openai_model,
        api_key=openai_api_key,
        temperature=0.2,
    )

    st.set_page_config(
        page_title="AI NKPTC - ‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°",
        page_icon="üéì",
        layout="centered",
    )

    st.markdown("""
        <style>
            [data-testid="stAppViewContainer"] {
                background-color: #ffffff;
            }
            [data-testid="stHeader"] {
                background-color: #ffffff;
            }
            [data-testid="stToolbar"] {
                background-color: #ffffff;
            }
            [data-testid="stSidebar"] {
                background-color: #f8f9fa;
            }
            .stTextInput > div > div > input {
                background-color: #ffffff;
                color: #000000 !important;
                text-align: center;
            }
            h1 {
                color: #000000 !important;
                text-align: center;
            }
            p {
                color: #000000 !important;
                text-align: center;
            }
            .stMarkdown {
                color: #000000;
            }
            .stButton button {
                background-color: #0066CC;
                color: #ffffff;
            }
            .stTextInput label {
                color: #000000 !important;
            }
            .language-selector {
                margin-bottom: 20px;
            }
        </style>
    """, unsafe_allow_html=True)

    left_co, cent_co, last_co = st.columns([1,3,1])
    with cent_co:
        st.image('logo-nptc-full.png', width=500)

    
    st.title("‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°")
    st.title("NKPTC Education Assistant")

    st.markdown("""
        ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°
        ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏õ‡πâ‡∏≠‡∏ô‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏ô‡∏µ‡πâ ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡∏Ñ‡∏∏‡∏ì‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
        
        Welcome to NKPTC Education Assistant.
        Please enter your question below and we will help you find the information you need.
    """)

    question = st.text_input("‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì / Your Question:", "")

    search_button = st.button("‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ / Search")

    asisten_pelatihan = Agent(
        role='‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°',
        goal=f'‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö {question}? ‡∏ó‡∏µ‡πà‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°',
        backstory='‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ç‡∏ß‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏ó‡∏∏‡πà‡∏°‡πÄ‡∏ó‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ä‡πà‡∏ß‡∏¢‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°',
        tools=[web_rag_tool],
        verbose=True,
        memory=True
    )
    
    riset_program_pelatihan = Task(
        description=(
            f'‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö {question}? ‡∏ó‡∏µ‡πà‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏° '
            f"‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏°‡∏∏‡πà‡∏á‡πÄ‡∏ô‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏£‡∏ß‡∏à‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÅ‡∏•‡∏∞‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏à‡∏≤‡∏Å {url}"
        ),
        expected_output=(
            f"""
            ‚ú® ‡πÉ‡∏´‡πâ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏£‡∏∏‡∏õ‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢:
            
            üìù ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 3 ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ï‡πà‡∏≠‡∏¢‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤
            üéØ ‡∏°‡∏∏‡πà‡∏á‡πÄ‡∏ô‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö {question}
            ‚ùå ‡πÅ‡∏à‡πâ‡∏á‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
            
            ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö:
            
            üí° [‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à]
            
            [‡∏¢‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤ 1 - ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 3 ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î]
            [‡∏¢‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤ 2 - ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 3 ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î] (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
            
            üîç ‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏≤: [‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á]
            """
        ),
        agent=asisten_pelatihan,
        tools=[web_rag_tool]
    )
    
    if search_button:
        if not question:
            st.error("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏õ‡πâ‡∏≠‡∏ô‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì")
        else:
            crew = Crew(
                agents=[asisten_pelatihan],
                tasks=[riset_program_pelatihan],
                verbose=True,
                manager_llm=llm
            )

            with st.spinner("üîÑ..."):
                result = crew.kickoff()

            st.markdown(result)
